server:
  port: 80

spring:
  application:
    name: gateway-server-demo
  # redis 配置
  redis:
    timeout: 1000 # 连接超时时间
    host: 127.0.0.1 # redis地址
    port: 6379 # 端口
    database: 1 # 选择库
    lettuce: # 连接池配置
      pool:
        max-active: 1024 # 最大连接数
        max-wait: 10000 # 最大阻塞等待时间
        max-idle: 200 # 最大空闲数
        min-idle: 5 # 最小空闲数
  cloud:
    gateway:
      # 路由规则
      routes:
        - id: eureka-feign # 路由ID，唯一
          uri: lb://eureka-feign-demo # lb:// 根据服务名从注册中心获取服务请求地址，lb表示loadbalance负载均衡
          predicates: # 断言(判断条件)
            - Path=/list/** # 匹配对应的url的请求，将匹配到的请求追加到url后
            #            - Path=/** # 匹配对应的url的请求，将匹配到的请求追加到url后
            #            - Path=/api/{segment}
          filters: # 过滤器
            # 限流过滤器
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充的速率
                redis-rate-limiter.burstCapacity: 2 # 令牌桶容量
                redis-rate-limiter.requestedTokens: 1 # 每个请求从桶中提取的令牌数,默认1
                key-resolver: "#{@myKeyResolver}" # 使用SpEl表达式安名称引用bean
  #            - SetPath=/{segment}
  #            - AddRequestParameter=flag, true # 路由到下游前添加请求参数
  #            - SetStatus=401 # 设置响应的状态
  #            - StripPrefix=2
  #            - PrefixPath=/list # 路径添加前缀
  #            - RewritePath=/api/?(?<segment>.*), /$\{segment} # 路径重写为 /list/**
  #      discovery:
  #        locator: # 与服务发现组件结合,通过serviceId转发到具体服务实例
  #          enabled: true # 开启基于服务发现的路由规则
  #          lower-case-service-id: true # 是否将服务名转小写

# 路由规则
#      routes:
#        - id: eureka-feign # 路由ID，唯一
##          uri: http://localhost:8006 # 目标URL，路由到微服务的地址
#          uri: lb://eureka-feign-demo # lb:// 根据服务名从注册中心获取服务请求地址，lb表示loadbalance负载均衡
#          predicates: # 断言(判断条件)
#            - Header=X-Request-Id, \d+  # 请求头包含X-Request-Id并且其值匹配正则表达式 \d+
#            - RemoteAddr=192.168.0.126/0 # 根据远程IP地址匹配, 0表示子网
#            - After=2022-05-16T22:11:16.000+08:00[Asia/Shanghai] # 匹配时间之后的请求
#            - Before=2022-05-16T22:12:16.000+08:00[Asia/Shanghai] # 匹配时间之前的请求
#            - Between=2022-05-16T22:13:30.000+08:00[Asia/Shanghai], 2022-05-16T22:15:16.000+08:00[Asia/Shanghai] # 匹配时间之间的请求
#            - Method=GET  # 匹配任意get请求
#            - Query=token  # 匹配请求参数中包含token属性的请求
#            - Query=param, abc. # 匹配请求参数中包含param并且参数满足正则表达式 abc. 的请求
#            - Path=/list/** # 匹配对应的url的请求，将匹配到的请求追加到url后


# Eureka 配置
eureka:
  instance:
    hostname: ${spring.cloud.client.ip-address}:${server.port}  # 主机名，不配置会获取系统主机名
    prefer-ip-address: true # 是否使用IP注册
    instance-id: ${spring.cloud.client.ip-address}:${server.port} # 实例ID
  client:
    register-with-eureka: true # 是否将自己注册到注册中心，默认true
    fetch-registry: true # 是否从注册中心获取注册信息，默认true
    service-url: # 指向注册中心
      defaultZone: http://root:123456@localhost:8002/eureka/,http://root:123456@localhost:8001/eureka/
    registry-fetch-interval-seconds: 10 # 拉取Eureka注册信息间隔时间
