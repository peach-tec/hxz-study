<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 指定命名空间，指向对应的mapper接口 -->
<mapper namespace="com.hxz.mybatis.mapper.UserMapper">

    <!-- id 指向mapper接口的方法名 -->
    <insert id="insertUser">
        <!-- 直接取属性名 -->
        insert into t_user (username, password, age, sex, email)
        VALUES (#{username}, #{password}, #{age}, #{sex}, #{email})
    </insert>
    <!--
        useGeneratedKeys：设置当前标签中的sql使用自增主键
        keyProperty：将自增主键的值赋值给传输到映射文件中参数的某个属性
     -->
    <insert id="saveUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (username, password, age, sex, email) VALUES (#{username}, #{password}, #{age}, #{sex}, #{email})
    </insert>
    <delete id="deleteBatch">
        <!-- #{}的方式会自动添加单引号导致ID格式错误而抛出异常 -->
        <!-- delete from t_user where id in (#{ids}) -->
        <!-- 正确示例： -->
        delete from t_user where id in (${ids})
    </delete>
    <delete id="deleteBatchByUsername">
        delete from t_user where username in (${username})
    </delete>
    <select id="getById" resultType="com.hxz.mybatis.entity.User">
        select * from t_user where id = #{id}
    </select>
    <select id="listUsers" resultType="User">
        select * from t_user </select>
    <select id="getByUsername" resultType="com.hxz.mybatis.entity.User">
        <!-- select * from t_user where username = #{username} -->
        select * from t_user where username = '${username}'
    </select>
    <select id="getByUsernameAndPassword" resultType="com.hxz.mybatis.entity.User">
        <!-- 直接使用参数名来获取会抛出org.apache.ibatis.binding.BindingException: Parameter 'username' not found. Available parameters are [arg1, arg0, param1, param2] 异常 -->
        <!-- 错误示例：select * from t_user where username = #{username} and password = #{password} -->
        <!-- 正确示例： -->
        <!-- select * from t_user where username = #{arg0} and password = #{arg1} -->
        select * from t_user where username = #{param1} and password = #{param2}
    </select>
    <select id="getByParams" resultType="com.hxz.mybatis.entity.User">
        <!-- 取map集合中的键 -->
        select * from t_user where username = #{username} and password = #{password}
    </select>
    <select id="getUser" resultType="com.hxz.mybatis.entity.User">
        <!-- 使用了@Param注解标识参数，Mybatis会使用@Param注解的value值将参数放在map集合中，这个时候只能使用@Param注解的value值来获取参数 -->
        select * from t_user where username = #{username} and password = #{password}
    </select>
    <select id="mapUser" resultType="java.util.Map">
        select * from t_user;
    </select>
    <select id="getUserByLike" resultType="com.hxz.mybatis.entity.User">
        <!-- 通过#{}占位符获取参数时抛出异常，因为不能识别占位符 -->
        <!-- select * from t_user where username like '%#{username}%' -->
        <!-- 正确示例： -->
        <!-- select * from t_user where username like '%${username}%' -->
        <!-- select * from t_user where username like concat('%',#{username},'%') -->
        <!--  -->
        select * from t_user where username like "%"#{username}"%"
    </select>
    <select id="getUserByTableName" resultType="com.hxz.mybatis.entity.User">
        <!-- 表名是不加单引号的，所以不能使用#{}占位符的方式 -->
        <!-- select * from #{tableName} -->
        select * from ${tableName}
    </select>
</mapper>
