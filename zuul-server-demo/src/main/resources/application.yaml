server:
  port: 80
spring:
  application:
    name: zuul-server-demo
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 10000
    database: 0
    lettuce:
      pool:
        max-active: 1024
        max-idle: 200
        max-wait: 10000
        min-idle: 5

# Zuul 路由规则
zuul:
  SendErrorFilter:
    error:
      disable: true # 停用内置的默认异常处理器
  # 服务限流
  ratelimit:
    enabled: true  # 开启限流保护
    repository: redis # 限流数据储存方式
    policy-list: # 局部限流配置，优先级高于全部
      eureka-feign-demo: # 需要限流的服务名
        - limit: 5 # 每个刷新间隔窗口的请求数量限制
          quota: 1000 # 单位时间内累计请求时间限制（秒）
          refresh-interval: 60 # 限流时间窗口，默认60
          type: # 限流方式
            - USER
            - ORIGIN
            - URL
  #    default-policy-list: # 全局策略，默认
  #      - limit: 3 # 每个刷新间隔窗口的请求数量限制
  #        quota: 1000 # 单位时间内累计请求时间限制（秒）
  #        refresh-interval: 60 # 限流时间窗口，默认60
  #        type: # 限流方式
  #          - USER
  #          - ORIGIN
  #          - URL
  # 路由规则
  routes:
    eureka-feign: # 路由ID，自定义，建议配置成对应服务的服务名
      path: /consumer/** # 请求url的映射路径
      serviceId: eureka-feign-demo # 根据服务名自动从服务注册中心获取服务地址并转发
  ignored-services: eureka-provider-demo # 据服务名排除，多个服务逗号分割， '*' 排除所有
  prefix: /api

#  ignored-patterns: /**/list  # 排除所有请求路径中有 list 的请求，排除多个用逗号分割
#      url: http://localhost:8006/ # 映射路径对应的微服务地址



# Eureka 配置
eureka:
  instance:
    hostname: ${spring.cloud.client.ip-address}:${server.port}  # 主机名，不配置会获取系统主机名
    prefer-ip-address: true # 是否使用IP注册
    instance-id: ${spring.cloud.client.ip-address}:${server.port} # 实例ID
  client:
    register-with-eureka: true # 是否将自己注册到注册中心，默认true
    fetch-registry: true # 是否从注册中心获取注册信息，默认true
    service-url: # 指向注册中心
      defaultZone: http://root:123456@localhost:8002/eureka/,http://root:123456@localhost:8001/eureka/
    registry-fetch-interval-seconds: 10 # 拉取Eureka注册信息间隔时间

# 度量指标监控和健康检查
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream
